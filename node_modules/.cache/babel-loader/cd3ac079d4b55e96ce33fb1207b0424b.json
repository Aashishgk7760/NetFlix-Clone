{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aashish/Desktop/react tut/netflix-clone/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport requests from './requests'; //STATE IS SHO RT TERM MEMORY OR VARIABLES IN REACT\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({\n  title,\n  fetchUrl\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]); //IF [] RUN ONCE WHEN ROW LOADS AND DONT RUN AGAIN\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${base_url}${movie.poster_path}`,\n          alt: movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 27\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"+jZiGaK1IrFkDFSplSYv9W7La4s=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/aashish/Desktop/react tut/netflix-clone/src/Row.js"],"names":["React","useState","useEffect","axios","requests","base_url","Row","title","fetchUrl","movies","setMovies","fetchData","request","get","data","results","map","movie","poster_path","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;;AACA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAb,EAA+B;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,mBAAeS,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUL,QAAV,CAAtB;AACAE,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACV,GARM,EAQJ,CAACH,QAAD,CARI,CAAT,CAF2B,CAUV;;AAGjB,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKE,MAAM,CAACO,GAAP,CAAWC,KAAK,IAAE;AAChB,4BAAO;AACN,UAAA,GAAG,EAAG,GAAEZ,QAAS,GAAEY,KAAK,CAACC,WAAY,EAD/B;AAEN,UAAA,GAAG,EAAED,KAAK,CAACE;AAFL;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGF,OAJA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA3BQb,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from './axios';\nimport requests from './requests';\n//STATE IS SHO RT TERM MEMORY OR VARIABLES IN REACT\n\nconst base_url = \"https://image.tmdb.org/t/p/original\"\nfunction Row({title,fetchUrl}) {\n    const [movies,setMovies] = useState([]);\n    useEffect(() => {\n\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n      }, [fetchUrl]);//IF [] RUN ONCE WHEN ROW LOADS AND DONT RUN AGAIN\n\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row_posters\">\n                {movies.map(movie=>{\n                   return <img\n                    src={`${base_url}${movie.poster_path}`}\n                    alt={movie.name} />\n                })}\n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}